plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    //   id 'maven-publish'
    id 'kotlin-kapt'
}

apply from:"${rootProject.rootDir}/config_gradle.gradle"

def androidId = rootProject.ext.androidId
def isRelease = rootProject.ext.isRelease

//if (isRelease) {// 如果是发布版本时，各个模块都不能独立运行
//    apply plugin: 'com.android.library'
//} else {
//    apply plugin: 'com.android.application'
//}

//if (isRelease) {
//    plugins {
//        id 'com.android.library'
//        id 'org.jetbrains.kotlin.android'
//    }
//} else {
//    plugins {
//        id 'com.android.application'
//        id 'org.jetbrains.kotlin.android'
//    }
//}

android {
    compileSdk 32

    defaultConfig {
      //  applicationId "com.example.goodsmodule"
        minSdk 22
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        // 省略其他部分
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME : project.getName() ]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main {
            if (isRelease) {
                //独立运行
                manifest.srcFile 'src/main/AndroidManifest.xml'
                // 指定源码目录
//                java.srcDir 'src/main/java'
//                java.srcDir 'src/main/alone'
            } else {
                //合并到宿主
                manifest.srcFile 'src/main/manifest/AndroidManifest.xml'
                //指定源码目录
                //    java.srcDir 'src/main/java'
                //不想包含的文件路径
                //   java.exclude 'src/main/alone'
                resources {
                    //正式版本时，排除manifest文件夹下所有调试文件
               //     exclude 'src/main/*'
                    //指定源码目录
                    //   java.srcDir 'src/main/java'
                    //不想包含的文件路径
                    //      java.exclude 'src/main/alone'
                }
            }
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    rootProject.ext.dependencies.each { k, v -> implementation v }
    // ARouter路由器框架
    api 'com.alibaba:arouter-api:1.5.2'
  //  annotationProcessor 'com.alibaba:arouter-compiler:1.5.2'
    kapt 'com.alibaba:arouter-compiler:1.5.2'
    implementation "androidx.datastore:datastore:1.0.0"

    implementation "androidx.datastore:datastore-preferences:1.0.0"

    implementation "androidx.datastore:datastore-preferences-core:1.0.0"

    implementation "androidx.datastore:datastore-core:1.0.0"
 //   api "${rootProject.ext.arch.libraryHttp}"
    //api 'com.contrarywind:Android-PickerView:4.1.9'
}